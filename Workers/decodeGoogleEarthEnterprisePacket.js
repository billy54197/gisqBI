/**
 * @license
 * Cesium - https://github.com/CesiumGS/cesium
 * Version 1.99.9
 *
 * Copyright 2011-2022 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/CesiumGS/cesium/blob/main/LICENSE.md for full licensing details.
 */define(["./RuntimeError-38a08050","./defaultValue-ebbd2e4d","./createTaskProcessorWorker"],function(O,St,Zt){"use strict";function et(e,i){if(et.passThroughDataForTesting)return i;const t=e.byteLength;if(t===0||t%4!=0)throw new O.RuntimeError("The length of key must be greater than 0 and a multiple of 4.");const o=new DataView(i),s=o.getUint32(0,!0);if(s===1953029805||s===2917034100)return i;const a=new DataView(e);let d=0;const l=i.byteLength,m=l-l%8,r=t;let n,E=8;for(;d<m;)for(E=(E+8)%24,n=E;d<m&&n<r;)o.setUint32(d,o.getUint32(d,!0)^a.getUint32(n,!0),!0),o.setUint32(d+4,o.getUint32(d+4,!0)^a.getUint32(n+4,!0),!0),d+=8,n+=24;if(d<l)for(n>=r&&(E=(E+8)%24,n=E);d<l;)o.setUint8(d,o.getUint8(d)^a.getUint8(n)),d++,n++}function Y(e,i){return(e&i)!=0}et.passThroughDataForTesting=!1;const Dt=[1,2,4,8];function B(e,i,t,o,s,a){this._bits=e,this.cnodeVersion=i,this.imageryVersion=t,this.terrainVersion=o,this.imageryProvider=s,this.terrainProvider=a,this.ancestorHasTerrain=!1,this.terrainState=void 0}B.clone=function(e,i){return St.defined(i)?(i._bits=e._bits,i.cnodeVersion=e.cnodeVersion,i.imageryVersion=e.imageryVersion,i.terrainVersion=e.terrainVersion,i.imageryProvider=e.imageryProvider,i.terrainProvider=e.terrainProvider):i=new B(e._bits,e.cnodeVersion,e.imageryVersion,e.terrainVersion,e.imageryProvider,e.terrainProvider),i.ancestorHasTerrain=e.ancestorHasTerrain,i.terrainState=e.terrainState,i},B.prototype.setParent=function(e){this.ancestorHasTerrain=e.ancestorHasTerrain||this.hasTerrain()},B.prototype.hasSubtree=function(){return Y(this._bits,16)},B.prototype.hasImagery=function(){return Y(this._bits,64)},B.prototype.hasTerrain=function(){return Y(this._bits,128)},B.prototype.hasChildren=function(){return Y(this._bits,15)},B.prototype.hasChild=function(e){return Y(this._bits,Dt[e])},B.prototype.getChildBitmask=function(){return 15&this._bits};var H={},D={},It=(e,i,t,o)=>{let s=65535&e|0,a=e>>>16&65535|0,d=0;for(;t!==0;){d=t>2e3?2e3:t,t-=d;do s=s+i[o++]|0,a=a+s|0;while(--d);s%=65521,a%=65521}return s|a<<16|0};const Ot=new Uint32Array((()=>{let e,i=[];for(var t=0;t<256;t++){e=t;for(var o=0;o<8;o++)e=1&e?3988292384^e>>>1:e>>>1;i[t]=e}return i})());var Bt=(e,i,t,o)=>{const s=Ot,a=o+t;e^=-1;for(let d=o;d<a;d++)e=e>>>8^s[255&(e^i[d])];return-1^e};const q=15,Ct=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),Nt=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),Mt=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),Lt=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]);var nt={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};const it=It,C=Bt,Ft=function(e,i){let t,o,s,a,d,l,m,r,n,E,h,c,U,p,w,x,_,f,k,R,u,v,g,b;const y=e.state;t=e.next_in,g=e.input,o=t+(e.avail_in-5),s=e.next_out,b=e.output,a=s-(i-e.avail_out),d=s+(e.avail_out-257),l=y.dmax,m=y.wsize,r=y.whave,n=y.wnext,E=y.window,h=y.hold,c=y.bits,U=y.lencode,p=y.distcode,w=(1<<y.lenbits)-1,x=(1<<y.distbits)-1;t:do{c<15&&(h+=g[t++]<<c,c+=8,h+=g[t++]<<c,c+=8),_=U[h&w];e:for(;;){if(f=_>>>24,h>>>=f,c-=f,f=_>>>16&255,f===0)b[s++]=65535&_;else{if(!(16&f)){if(!(64&f)){_=U[(65535&_)+(h&(1<<f)-1)];continue e}if(32&f){y.mode=12;break t}e.msg="invalid literal/length code",y.mode=30;break t}k=65535&_,f&=15,f&&(c<f&&(h+=g[t++]<<c,c+=8),k+=h&(1<<f)-1,h>>>=f,c-=f),c<15&&(h+=g[t++]<<c,c+=8,h+=g[t++]<<c,c+=8),_=p[h&x];n:for(;;){if(f=_>>>24,h>>>=f,c-=f,f=_>>>16&255,!(16&f)){if(!(64&f)){_=p[(65535&_)+(h&(1<<f)-1)];continue n}e.msg="invalid distance code",y.mode=30;break t}if(R=65535&_,f&=15,c<f&&(h+=g[t++]<<c,c+=8,c<f&&(h+=g[t++]<<c,c+=8)),R+=h&(1<<f)-1,R>l){e.msg="invalid distance too far back",y.mode=30;break t}if(h>>>=f,c-=f,f=s-a,R>f){if(f=R-f,f>r&&y.sane){e.msg="invalid distance too far back",y.mode=30;break t}if(u=0,v=E,n===0){if(u+=m-f,f<k){k-=f;do b[s++]=E[u++];while(--f);u=s-R,v=b}}else if(n<f){if(u+=m+n-f,f-=n,f<k){k-=f;do b[s++]=E[u++];while(--f);if(u=0,n<k){f=n,k-=f;do b[s++]=E[u++];while(--f);u=s-R,v=b}}}else if(u+=n-f,f<k){k-=f;do b[s++]=E[u++];while(--f);u=s-R,v=b}for(;k>2;)b[s++]=v[u++],b[s++]=v[u++],b[s++]=v[u++],k-=3;k&&(b[s++]=v[u++],k>1&&(b[s++]=v[u++]))}else{u=s-R;do b[s++]=b[u++],b[s++]=b[u++],b[s++]=b[u++],k-=3;while(k>2);k&&(b[s++]=b[u++],k>1&&(b[s++]=b[u++]))}break}}break}}while(t<o&&s<d);k=c>>3,t-=k,c-=k<<3,h&=(1<<c)-1,e.next_in=t,e.next_out=s,e.avail_in=t<o?o-t+5:5-(t-o),e.avail_out=s<d?d-s+257:257-(s-d),y.hold=h,y.bits=c},G=(e,i,t,o,s,a,d,l)=>{const m=l.bits;let r,n,E,h,c,U,p=0,w=0,x=0,_=0,f=0,k=0,R=0,u=0,v=0,g=0,b=null,y=0;const A=new Uint16Array(16),Z=new Uint16Array(16);let L,I,F,tt=null,Ut=0;for(p=0;p<=q;p++)A[p]=0;for(w=0;w<o;w++)A[i[t+w]]++;for(f=m,_=q;_>=1&&A[_]===0;_--);if(f>_&&(f=_),_===0)return s[a++]=20971520,s[a++]=20971520,l.bits=1,0;for(x=1;x<_&&A[x]===0;x++);for(f<x&&(f=x),u=1,p=1;p<=q;p++)if(u<<=1,u-=A[p],u<0)return-1;if(u>0&&(e===0||_!==1))return-1;for(Z[1]=0,p=1;p<q;p++)Z[p+1]=Z[p]+A[p];for(w=0;w<o;w++)i[t+w]!==0&&(d[Z[i[t+w]]++]=w);if(e===0?(b=tt=d,U=19):e===1?(b=Ct,y-=257,tt=Nt,Ut-=257,U=256):(b=Mt,tt=Lt,U=-1),g=0,w=0,p=x,c=a,k=f,R=0,E=-1,v=1<<f,h=v-1,e===1&&v>852||e===2&&v>592)return 1;for(;;){L=p-R,d[w]<U?(I=0,F=d[w]):d[w]>U?(I=tt[Ut+d[w]],F=b[y+d[w]]):(I=96,F=0),r=1<<p-R,n=1<<k,x=n;do n-=r,s[c+(g>>R)+n]=L<<24|I<<16|F|0;while(n!==0);for(r=1<<p-1;g&r;)r>>=1;if(r!==0?(g&=r-1,g+=r):g=0,w++,--A[p]==0){if(p===_)break;p=i[t+d[w]]}if(p>f&&(g&h)!==E){for(R===0&&(R=f),c+=x,k=p-R,u=1<<k;k+R<_&&(u-=A[k+R],!(u<=0));)k++,u<<=1;if(v+=1<<k,e===1&&v>852||e===2&&v>592)return 1;E=g&h,s[E]=f<<24|k<<16|c-a|0}}return g!==0&&(s[c+g]=p-R<<24|64<<16|0),l.bits=f,0},{Z_FINISH:ht,Z_BLOCK:Pt,Z_TREES:J,Z_OK:z,Z_STREAM_END:zt,Z_NEED_DICT:Vt,Z_STREAM_ERROR:S,Z_DATA_ERROR:ut,Z_MEM_ERROR:wt,Z_BUF_ERROR:Ht,Z_DEFLATED:bt}=nt,N=12,T=30,mt=e=>(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24);function jt(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const gt=e=>{if(!e||!e.state)return S;const i=e.state;return e.total_in=e.total_out=i.total=0,e.msg="",i.wrap&&(e.adler=1&i.wrap),i.mode=1,i.last=0,i.havedict=0,i.dmax=32768,i.head=null,i.hold=0,i.bits=0,i.lencode=i.lendyn=new Int32Array(852),i.distcode=i.distdyn=new Int32Array(592),i.sane=1,i.back=-1,z},kt=e=>{if(!e||!e.state)return S;const i=e.state;return i.wsize=0,i.whave=0,i.wnext=0,gt(e)},_t=(e,i)=>{let t;if(!e||!e.state)return S;const o=e.state;return i<0?(t=0,i=-i):(t=1+(i>>4),i<48&&(i&=15)),i&&(i<8||i>15)?S:(o.window!==null&&o.wbits!==i&&(o.window=null),o.wrap=t,o.wbits=i,kt(e))},pt=(e,i)=>{if(!e)return S;const t=new jt;e.state=t,t.window=null;const o=_t(e,i);return o!==z&&(e.state=null),o};let rt,at,yt=!0;const Kt=e=>{if(yt){rt=new Int32Array(512),at=new Int32Array(32);let i=0;for(;i<144;)e.lens[i++]=8;for(;i<256;)e.lens[i++]=9;for(;i<280;)e.lens[i++]=7;for(;i<288;)e.lens[i++]=8;for(G(1,e.lens,0,288,rt,0,e.work,{bits:9}),i=0;i<32;)e.lens[i++]=5;G(2,e.lens,0,32,at,0,e.work,{bits:5}),yt=!1}e.lencode=rt,e.lenbits=9,e.distcode=at,e.distbits=5},vt=(e,i,t,o)=>{let s;const a=e.state;return a.window===null&&(a.wsize=1<<a.wbits,a.wnext=0,a.whave=0,a.window=new Uint8Array(a.wsize)),o>=a.wsize?(a.window.set(i.subarray(t-a.wsize,t),0),a.wnext=0,a.whave=a.wsize):(s=a.wsize-a.wnext,s>o&&(s=o),a.window.set(i.subarray(t-o,t-o+s),a.wnext),(o-=s)?(a.window.set(i.subarray(t-o,t),0),a.wnext=o,a.whave=a.wsize):(a.wnext+=s,a.wnext===a.wsize&&(a.wnext=0),a.whave<a.wsize&&(a.whave+=s))),0};D.inflateReset=kt,D.inflateReset2=_t,D.inflateResetKeep=gt,D.inflateInit=e=>pt(e,15),D.inflateInit2=pt,D.inflate=(e,i)=>{let t,o,s,a,d,l,m,r,n,E,h,c,U,p,w,x,_,f,k,R,u,v,g=0;const b=new Uint8Array(4);let y,A;const Z=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(!e||!e.state||!e.output||!e.input&&e.avail_in!==0)return S;t=e.state,t.mode===N&&(t.mode=13),d=e.next_out,s=e.output,m=e.avail_out,a=e.next_in,o=e.input,l=e.avail_in,r=t.hold,n=t.bits,E=l,h=m,v=z;t:for(;;)switch(t.mode){case 1:if(t.wrap===0){t.mode=13;break}for(;n<16;){if(l===0)break t;l--,r+=o[a++]<<n,n+=8}if(2&t.wrap&&r===35615){t.check=0,b[0]=255&r,b[1]=r>>>8&255,t.check=C(t.check,b,2,0),r=0,n=0,t.mode=2;break}if(t.flags=0,t.head&&(t.head.done=!1),!(1&t.wrap)||(((255&r)<<8)+(r>>8))%31){e.msg="incorrect header check",t.mode=T;break}if((15&r)!==bt){e.msg="unknown compression method",t.mode=T;break}if(r>>>=4,n-=4,u=8+(15&r),t.wbits===0)t.wbits=u;else if(u>t.wbits){e.msg="invalid window size",t.mode=T;break}t.dmax=1<<t.wbits,e.adler=t.check=1,t.mode=512&r?10:N,r=0,n=0;break;case 2:for(;n<16;){if(l===0)break t;l--,r+=o[a++]<<n,n+=8}if(t.flags=r,(255&t.flags)!==bt){e.msg="unknown compression method",t.mode=T;break}if(57344&t.flags){e.msg="unknown header flags set",t.mode=T;break}t.head&&(t.head.text=r>>8&1),512&t.flags&&(b[0]=255&r,b[1]=r>>>8&255,t.check=C(t.check,b,2,0)),r=0,n=0,t.mode=3;case 3:for(;n<32;){if(l===0)break t;l--,r+=o[a++]<<n,n+=8}t.head&&(t.head.time=r),512&t.flags&&(b[0]=255&r,b[1]=r>>>8&255,b[2]=r>>>16&255,b[3]=r>>>24&255,t.check=C(t.check,b,4,0)),r=0,n=0,t.mode=4;case 4:for(;n<16;){if(l===0)break t;l--,r+=o[a++]<<n,n+=8}t.head&&(t.head.xflags=255&r,t.head.os=r>>8),512&t.flags&&(b[0]=255&r,b[1]=r>>>8&255,t.check=C(t.check,b,2,0)),r=0,n=0,t.mode=5;case 5:if(1024&t.flags){for(;n<16;){if(l===0)break t;l--,r+=o[a++]<<n,n+=8}t.length=r,t.head&&(t.head.extra_len=r),512&t.flags&&(b[0]=255&r,b[1]=r>>>8&255,t.check=C(t.check,b,2,0)),r=0,n=0}else t.head&&(t.head.extra=null);t.mode=6;case 6:if(1024&t.flags&&(c=t.length,c>l&&(c=l),c&&(t.head&&(u=t.head.extra_len-t.length,t.head.extra||(t.head.extra=new Uint8Array(t.head.extra_len)),t.head.extra.set(o.subarray(a,a+c),u)),512&t.flags&&(t.check=C(t.check,o,c,a)),l-=c,a+=c,t.length-=c),t.length))break t;t.length=0,t.mode=7;case 7:if(2048&t.flags){if(l===0)break t;c=0;do u=o[a+c++],t.head&&u&&t.length<65536&&(t.head.name+=String.fromCharCode(u));while(u&&c<l);if(512&t.flags&&(t.check=C(t.check,o,c,a)),l-=c,a+=c,u)break t}else t.head&&(t.head.name=null);t.length=0,t.mode=8;case 8:if(4096&t.flags){if(l===0)break t;c=0;do u=o[a+c++],t.head&&u&&t.length<65536&&(t.head.comment+=String.fromCharCode(u));while(u&&c<l);if(512&t.flags&&(t.check=C(t.check,o,c,a)),l-=c,a+=c,u)break t}else t.head&&(t.head.comment=null);t.mode=9;case 9:if(512&t.flags){for(;n<16;){if(l===0)break t;l--,r+=o[a++]<<n,n+=8}if(r!==(65535&t.check)){e.msg="header crc mismatch",t.mode=T;break}r=0,n=0}t.head&&(t.head.hcrc=t.flags>>9&1,t.head.done=!0),e.adler=t.check=0,t.mode=N;break;case 10:for(;n<32;){if(l===0)break t;l--,r+=o[a++]<<n,n+=8}e.adler=t.check=mt(r),r=0,n=0,t.mode=11;case 11:if(t.havedict===0)return e.next_out=d,e.avail_out=m,e.next_in=a,e.avail_in=l,t.hold=r,t.bits=n,Vt;e.adler=t.check=1,t.mode=N;case N:if(i===Pt||i===J)break t;case 13:if(t.last){r>>>=7&n,n-=7&n,t.mode=27;break}for(;n<3;){if(l===0)break t;l--,r+=o[a++]<<n,n+=8}switch(t.last=1&r,r>>>=1,n-=1,3&r){case 0:t.mode=14;break;case 1:if(Kt(t),t.mode=20,i===J){r>>>=2,n-=2;break t}break;case 2:t.mode=17;break;case 3:e.msg="invalid block type",t.mode=T}r>>>=2,n-=2;break;case 14:for(r>>>=7&n,n-=7&n;n<32;){if(l===0)break t;l--,r+=o[a++]<<n,n+=8}if((65535&r)!=(r>>>16^65535)){e.msg="invalid stored block lengths",t.mode=T;break}if(t.length=65535&r,r=0,n=0,t.mode=15,i===J)break t;case 15:t.mode=16;case 16:if(c=t.length,c){if(c>l&&(c=l),c>m&&(c=m),c===0)break t;s.set(o.subarray(a,a+c),d),l-=c,a+=c,m-=c,d+=c,t.length-=c;break}t.mode=N;break;case 17:for(;n<14;){if(l===0)break t;l--,r+=o[a++]<<n,n+=8}if(t.nlen=257+(31&r),r>>>=5,n-=5,t.ndist=1+(31&r),r>>>=5,n-=5,t.ncode=4+(15&r),r>>>=4,n-=4,t.nlen>286||t.ndist>30){e.msg="too many length or distance symbols",t.mode=T;break}t.have=0,t.mode=18;case 18:for(;t.have<t.ncode;){for(;n<3;){if(l===0)break t;l--,r+=o[a++]<<n,n+=8}t.lens[Z[t.have++]]=7&r,r>>>=3,n-=3}for(;t.have<19;)t.lens[Z[t.have++]]=0;if(t.lencode=t.lendyn,t.lenbits=7,y={bits:t.lenbits},v=G(0,t.lens,0,19,t.lencode,0,t.work,y),t.lenbits=y.bits,v){e.msg="invalid code lengths set",t.mode=T;break}t.have=0,t.mode=19;case 19:for(;t.have<t.nlen+t.ndist;){for(;g=t.lencode[r&(1<<t.lenbits)-1],w=g>>>24,x=g>>>16&255,_=65535&g,!(w<=n);){if(l===0)break t;l--,r+=o[a++]<<n,n+=8}if(_<16)r>>>=w,n-=w,t.lens[t.have++]=_;else{if(_===16){for(A=w+2;n<A;){if(l===0)break t;l--,r+=o[a++]<<n,n+=8}if(r>>>=w,n-=w,t.have===0){e.msg="invalid bit length repeat",t.mode=T;break}u=t.lens[t.have-1],c=3+(3&r),r>>>=2,n-=2}else if(_===17){for(A=w+3;n<A;){if(l===0)break t;l--,r+=o[a++]<<n,n+=8}r>>>=w,n-=w,u=0,c=3+(7&r),r>>>=3,n-=3}else{for(A=w+7;n<A;){if(l===0)break t;l--,r+=o[a++]<<n,n+=8}r>>>=w,n-=w,u=0,c=11+(127&r),r>>>=7,n-=7}if(t.have+c>t.nlen+t.ndist){e.msg="invalid bit length repeat",t.mode=T;break}for(;c--;)t.lens[t.have++]=u}}if(t.mode===T)break;if(t.lens[256]===0){e.msg="invalid code -- missing end-of-block",t.mode=T;break}if(t.lenbits=9,y={bits:t.lenbits},v=G(1,t.lens,0,t.nlen,t.lencode,0,t.work,y),t.lenbits=y.bits,v){e.msg="invalid literal/lengths set",t.mode=T;break}if(t.distbits=6,t.distcode=t.distdyn,y={bits:t.distbits},v=G(2,t.lens,t.nlen,t.ndist,t.distcode,0,t.work,y),t.distbits=y.bits,v){e.msg="invalid distances set",t.mode=T;break}if(t.mode=20,i===J)break t;case 20:t.mode=21;case 21:if(l>=6&&m>=258){e.next_out=d,e.avail_out=m,e.next_in=a,e.avail_in=l,t.hold=r,t.bits=n,Ft(e,h),d=e.next_out,s=e.output,m=e.avail_out,a=e.next_in,o=e.input,l=e.avail_in,r=t.hold,n=t.bits,t.mode===N&&(t.back=-1);break}for(t.back=0;g=t.lencode[r&(1<<t.lenbits)-1],w=g>>>24,x=g>>>16&255,_=65535&g,!(w<=n);){if(l===0)break t;l--,r+=o[a++]<<n,n+=8}if(x&&!(240&x)){for(f=w,k=x,R=_;g=t.lencode[R+((r&(1<<f+k)-1)>>f)],w=g>>>24,x=g>>>16&255,_=65535&g,!(f+w<=n);){if(l===0)break t;l--,r+=o[a++]<<n,n+=8}r>>>=f,n-=f,t.back+=f}if(r>>>=w,n-=w,t.back+=w,t.length=_,x===0){t.mode=26;break}if(32&x){t.back=-1,t.mode=N;break}if(64&x){e.msg="invalid literal/length code",t.mode=T;break}t.extra=15&x,t.mode=22;case 22:if(t.extra){for(A=t.extra;n<A;){if(l===0)break t;l--,r+=o[a++]<<n,n+=8}t.length+=r&(1<<t.extra)-1,r>>>=t.extra,n-=t.extra,t.back+=t.extra}t.was=t.length,t.mode=23;case 23:for(;g=t.distcode[r&(1<<t.distbits)-1],w=g>>>24,x=g>>>16&255,_=65535&g,!(w<=n);){if(l===0)break t;l--,r+=o[a++]<<n,n+=8}if(!(240&x)){for(f=w,k=x,R=_;g=t.distcode[R+((r&(1<<f+k)-1)>>f)],w=g>>>24,x=g>>>16&255,_=65535&g,!(f+w<=n);){if(l===0)break t;l--,r+=o[a++]<<n,n+=8}r>>>=f,n-=f,t.back+=f}if(r>>>=w,n-=w,t.back+=w,64&x){e.msg="invalid distance code",t.mode=T;break}t.offset=_,t.extra=15&x,t.mode=24;case 24:if(t.extra){for(A=t.extra;n<A;){if(l===0)break t;l--,r+=o[a++]<<n,n+=8}t.offset+=r&(1<<t.extra)-1,r>>>=t.extra,n-=t.extra,t.back+=t.extra}if(t.offset>t.dmax){e.msg="invalid distance too far back",t.mode=T;break}t.mode=25;case 25:if(m===0)break t;if(c=h-m,t.offset>c){if(c=t.offset-c,c>t.whave&&t.sane){e.msg="invalid distance too far back",t.mode=T;break}c>t.wnext?(c-=t.wnext,U=t.wsize-c):U=t.wnext-c,c>t.length&&(c=t.length),p=t.window}else p=s,U=d-t.offset,c=t.length;c>m&&(c=m),m-=c,t.length-=c;do s[d++]=p[U++];while(--c);t.length===0&&(t.mode=21);break;case 26:if(m===0)break t;s[d++]=t.length,m--,t.mode=21;break;case 27:if(t.wrap){for(;n<32;){if(l===0)break t;l--,r|=o[a++]<<n,n+=8}if(h-=m,e.total_out+=h,t.total+=h,h&&(e.adler=t.check=t.flags?C(t.check,s,h,d-h):it(t.check,s,h,d-h)),h=m,(t.flags?r:mt(r))!==t.check){e.msg="incorrect data check",t.mode=T;break}r=0,n=0}t.mode=28;case 28:if(t.wrap&&t.flags){for(;n<32;){if(l===0)break t;l--,r+=o[a++]<<n,n+=8}if(r!==(4294967295&t.total)){e.msg="incorrect length check",t.mode=T;break}r=0,n=0}t.mode=29;case 29:v=zt;break t;case T:v=ut;break t;case 31:return wt;default:return S}return e.next_out=d,e.avail_out=m,e.next_in=a,e.avail_in=l,t.hold=r,t.bits=n,(t.wsize||h!==e.avail_out&&t.mode<T&&(t.mode<27||i!==ht))&&vt(e,e.output,e.next_out,h-e.avail_out),E-=e.avail_in,h-=e.avail_out,e.total_in+=E,e.total_out+=h,t.total+=h,t.wrap&&h&&(e.adler=t.check=t.flags?C(t.check,s,h,e.next_out-h):it(t.check,s,h,e.next_out-h)),e.data_type=t.bits+(t.last?64:0)+(t.mode===N?128:0)+(t.mode===20||t.mode===15?256:0),(E===0&&h===0||i===ht)&&v===z&&(v=Ht),v},D.inflateEnd=e=>{if(!e||!e.state)return S;let i=e.state;return i.window&&(i.window=null),e.state=null,z},D.inflateGetHeader=(e,i)=>{if(!e||!e.state)return S;const t=e.state;return 2&t.wrap?(t.head=i,i.done=!1,z):S},D.inflateSetDictionary=(e,i)=>{const t=i.length;let o,s,a;return e&&e.state?(o=e.state,o.wrap!==0&&o.mode!==11?S:o.mode===11&&(s=1,s=it(s,i,t,0),s!==o.check)?ut:(a=vt(e,i,t,t),a?(o.mode=31,wt):(o.havedict=1,z))):S},D.inflateInfo="pako inflate (from Nodeca project)";var ot={};const Yt=(e,i)=>Object.prototype.hasOwnProperty.call(e,i);ot.assign=function(e){const i=Array.prototype.slice.call(arguments,1);for(;i.length;){const t=i.shift();if(t){if(typeof t!="object")throw new TypeError(t+"must be non-object");for(const o in t)Yt(t,o)&&(e[o]=t[o])}}return e},ot.flattenChunks=e=>{let i=0;for(let o=0,s=e.length;o<s;o++)i+=e[o].length;const t=new Uint8Array(i);for(let o=0,s=0,a=e.length;o<a;o++){let d=e[o];t.set(d,s),s+=d.length}return t};var $={};let Et=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch{Et=!1}const Q=new Uint8Array(256);for(let e=0;e<256;e++)Q[e]=e>=252?6:e>=248?5:e>=240?4:e>=224?3:e>=192?2:1;Q[254]=Q[254]=1,$.string2buf=e=>{if(typeof TextEncoder=="function"&&TextEncoder.prototype.encode)return new TextEncoder().encode(e);let i,t,o,s,a,d=e.length,l=0;for(s=0;s<d;s++)t=e.charCodeAt(s),(64512&t)==55296&&s+1<d&&(o=e.charCodeAt(s+1),(64512&o)==56320&&(t=65536+(t-55296<<10)+(o-56320),s++)),l+=t<128?1:t<2048?2:t<65536?3:4;for(i=new Uint8Array(l),a=0,s=0;a<l;s++)t=e.charCodeAt(s),(64512&t)==55296&&s+1<d&&(o=e.charCodeAt(s+1),(64512&o)==56320&&(t=65536+(t-55296<<10)+(o-56320),s++)),t<128?i[a++]=t:t<2048?(i[a++]=192|t>>>6,i[a++]=128|63&t):t<65536?(i[a++]=224|t>>>12,i[a++]=128|t>>>6&63,i[a++]=128|63&t):(i[a++]=240|t>>>18,i[a++]=128|t>>>12&63,i[a++]=128|t>>>6&63,i[a++]=128|63&t);return i},$.buf2string=(e,i)=>{const t=i||e.length;if(typeof TextDecoder=="function"&&TextDecoder.prototype.decode)return new TextDecoder().decode(e.subarray(0,i));let o,s;const a=new Array(2*t);for(s=0,o=0;o<t;){let d=e[o++];if(d<128){a[s++]=d;continue}let l=Q[d];if(l>4)a[s++]=65533,o+=l-1;else{for(d&=l===2?31:l===3?15:7;l>1&&o<t;)d=d<<6|63&e[o++],l--;l>1?a[s++]=65533:d<65536?a[s++]=d:(d-=65536,a[s++]=55296|d>>10&1023,a[s++]=56320|1023&d)}}return((d,l)=>{if(l<65534&&d.subarray&&Et)return String.fromCharCode.apply(null,d.length===l?d:d.subarray(0,l));let m="";for(let r=0;r<l;r++)m+=String.fromCharCode(d[r]);return m})(a,s)},$.utf8border=(e,i)=>{(i=i||e.length)>e.length&&(i=e.length);let t=i-1;for(;t>=0&&(192&e[t])==128;)t--;return t<0||t===0?i:t+Q[e[t]]>i?t:i};const M=D,xt=ot,st=$,lt={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"},Gt=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0},Qt=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1},Rt=Object.prototype.toString,{Z_NO_FLUSH:Wt,Z_FINISH:Xt,Z_OK:W,Z_STREAM_END:ct,Z_NEED_DICT:dt,Z_STREAM_ERROR:qt,Z_DATA_ERROR:At,Z_MEM_ERROR:Jt}=nt;function X(e){this.options=xt.assign({chunkSize:65536,windowBits:15,to:""},e||{});const i=this.options;i.raw&&i.windowBits>=0&&i.windowBits<16&&(i.windowBits=-i.windowBits,i.windowBits===0&&(i.windowBits=-15)),!(i.windowBits>=0&&i.windowBits<16)||e&&e.windowBits||(i.windowBits+=32),i.windowBits>15&&i.windowBits<48&&!(15&i.windowBits)&&(i.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new Gt,this.strm.avail_out=0;let t=M.inflateInit2(this.strm,i.windowBits);if(t!==W)throw new Error(lt[t]);if(this.header=new Qt,M.inflateGetHeader(this.strm,this.header),i.dictionary&&(typeof i.dictionary=="string"?i.dictionary=st.string2buf(i.dictionary):Rt.call(i.dictionary)==="[object ArrayBuffer]"&&(i.dictionary=new Uint8Array(i.dictionary)),i.raw&&(t=M.inflateSetDictionary(this.strm,i.dictionary),t!==W)))throw new Error(lt[t])}function ft(e,i){const t=new X(i);if(t.push(e),t.err)throw t.msg||lt[t.err];return t.result}X.prototype.push=function(e,i){const t=this.strm,o=this.options.chunkSize,s=this.options.dictionary;let a,d,l;if(this.ended)return!1;for(d=i===~~i?i:i===!0?Xt:Wt,Rt.call(e)==="[object ArrayBuffer]"?t.input=new Uint8Array(e):t.input=e,t.next_in=0,t.avail_in=t.input.length;;){for(t.avail_out===0&&(t.output=new Uint8Array(o),t.next_out=0,t.avail_out=o),a=M.inflate(t,d),a===dt&&s&&(a=M.inflateSetDictionary(t,s),a===W?a=M.inflate(t,d):a===At&&(a=dt));t.avail_in>0&&a===ct&&t.state.wrap>0&&e[t.next_in]!==0;)M.inflateReset(t),a=M.inflate(t,d);switch(a){case qt:case At:case dt:case Jt:return this.onEnd(a),this.ended=!0,!1}if(l=t.avail_out,t.next_out&&(t.avail_out===0||a===ct))if(this.options.to==="string"){let m=st.utf8border(t.output,t.next_out),r=t.next_out-m,n=st.buf2string(t.output,m);t.next_out=r,t.avail_out=o-r,r&&t.output.set(t.output.subarray(m,m+r),0),this.onData(n)}else this.onData(t.output.length===t.next_out?t.output:t.output.subarray(0,t.next_out));if(a!==W||l!==0){if(a===ct)return a=M.inflateEnd(this.strm),this.onEnd(a),this.ended=!0,!0;if(t.avail_in===0)break}}return!0},X.prototype.onData=function(e){this.chunks.push(e)},X.prototype.onEnd=function(e){e===W&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=xt.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg},H.Inflate=X,H.inflate=ft,H.inflateRaw=function(e,i){return(i=i||{}).raw=!0,ft(e,i)},H.ungzip=ft,H.constants=nt;const j=Uint16Array.BYTES_PER_ELEMENT,V=Int32Array.BYTES_PER_ELEMENT,K=Uint32Array.BYTES_PER_ELEMENT,P={METADATA:0,TERRAIN:1,DBROOT:2};P.fromString=function(e){return e==="Metadata"?P.METADATA:e==="Terrain"?P.TERRAIN:e==="DbRoot"?P.DBROOT:void 0};const Tt=1953029805,$t=2917034100;return Zt(function(e,i){const t=P.fromString(e.type);let o=e.buffer;et(e.key,o);const s=function(d){const l=new DataView(d);let m=0;const r=l.getUint32(m,!0);if(m+=K,r!==Tt&&r!==$t)throw new O.RuntimeError("Invalid magic");const n=l.getUint32(m,r===Tt);m+=K;const E=new Uint8Array(d,m),h=H.inflate(E);if(h.length!==n)throw new O.RuntimeError("Size of packet doesn't match header");return h}(o);o=s.buffer;const a=s.length;switch(t){case P.METADATA:return function(d,l,m){const r=new DataView(d);let n=0;const E=r.getUint32(n,!0);if(n+=K,E!==32301)throw new O.RuntimeError("Invalid magic");const h=r.getUint32(n,!0);if(n+=K,h!==1)throw new O.RuntimeError("Invalid data type. Must be 1 for QuadTreePacket");const c=r.getUint32(n,!0);if(n+=K,c!==2)throw new O.RuntimeError("Invalid QuadTreePacket version. Only version 2 is supported.");const U=r.getInt32(n,!0);n+=V;const p=r.getInt32(n,!0);if(n+=V,p!==32)throw new O.RuntimeError("Invalid instance size.");const w=r.getInt32(n,!0);n+=V;const x=r.getInt32(n,!0);n+=V;const _=r.getInt32(n,!0);if(n+=V,w!==U*p+n)throw new O.RuntimeError("Invalid dataBufferOffset");if(w+x+_!==l)throw new O.RuntimeError("Invalid packet offsets");const f=[];for(let b=0;b<U;++b){const y=r.getUint8(n);++n,++n;const A=r.getUint16(n,!0);n+=j;const Z=r.getUint16(n,!0);n+=j;const L=r.getUint16(n,!0);n+=j,n+=j,n+=j,n+=V,n+=V,n+=8;const I=r.getUint8(n++),F=r.getUint8(n++);n+=j,f.push(new B(y,A,Z,L,I,F))}const k=[];let R=0;function u(b,y,A){let Z=!1;if(A===4){if(y.hasSubtree())return;Z=!0}for(let L=0;L<4;++L){const I=b+L.toString();if(Z)k[I]=null;else if(A<4)if(y.hasChild(L)){if(R===U)return void console.log("Incorrect number of instances");const F=f[R++];k[I]=F,u(I,F,A+1)}else k[I]=null}}let v=0;const g=f[R++];return m===""?++v:k[m]=g,u(m,g,v),k}(o,a,e.quadKey);case P.TERRAIN:return function(d,l,m){const r=new DataView(d),n=function(c){for(let U=0;U<4;++U){const p=r.getUint32(c,!0);if(c+=K,(c+=p)>l)throw new O.RuntimeError("Malformed terrain packet found.")}return c};let E=0;const h=[];for(;h.length<5;){const c=E;E=n(E);const U=d.slice(c,E);m.push(U),h.push(U)}return h}(o,a,i);case P.DBROOT:return i.push(o),{buffer:o}}})});
