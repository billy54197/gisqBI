"use strict";(self.webpackChunkdatavisual=self.webpackChunkdatavisual||[]).push([[1357],{96411:function(M,L,A){A.d(L,{Z:function(){return C}});function T(r,o){let i=r.length-o,a=0;do{for(let s=o;s>0;s--)r[a+o]+=r[a],a++;i-=o}while(i>0)}function k(r,o,i){let a=0,s=r.length;const d=s/i;for(;s>o;){for(let n=o;n>0;--n)r[a+o]+=r[a],++a;s-=o}const t=r.slice();for(let n=0;n<d;++n)for(let e=0;e<i;++e)r[i*n+e]=t[(i-e-1)*d+n]}function U(r,o,i,a,s,d){if(!o||o===1)return r;for(let e=0;e<s.length;++e){if(s[e]%8!==0)throw new Error("When decoding with predictor, only multiple of 8 bits are supported.");if(s[e]!==s[0])throw new Error("When decoding with predictor, all samples must have the same size.")}const t=s[0]/8,n=d===2?1:s.length;for(let e=0;e<a&&!(e*n*i*t>=r.byteLength);++e){let l;if(o===2){switch(s[0]){case 8:l=new Uint8Array(r,e*n*i*t,n*i*t);break;case 16:l=new Uint16Array(r,e*n*i*t,n*i*t/2);break;case 32:l=new Uint32Array(r,e*n*i*t,n*i*t/4);break;default:throw new Error(`Predictor 2 not allowed with ${s[0]} bits per sample.`)}T(l,n,t)}else o===3&&(l=new Uint8Array(r,e*n*i*t,n*i*t),k(l,n,t))}return r}class C{async decode(o,i){const a=await this.decodeBlock(i),s=o.Predictor||1;if(s!==1){const d=!o.StripOffsets,t=d?o.TileWidth:o.ImageWidth,n=d?o.TileLength:o.RowsPerStrip||o.ImageLength;return U(a,s,t,n,o.BitsPerSample,o.PlanarConfiguration)}return a}}},31357:function(M,L,A){A.r(L),A.d(L,{default:function(){return d}});var T=A(96411),k=A(49500);const U=9,C=256,r=257,o=12;function i(t,n,e){const l=n%8,u=Math.floor(n/8),B=8-l,p=n+e-(u+1)*8;let w=8*(u+2)-(n+e);const I=(u+2)*8-n;if(w=Math.max(0,w),u>=t.length)return k.warn("ran off the end of the buffer before finding EOI_CODE (end on input code)"),r;let v=t[u]&2**(8-l)-1;v<<=e-B;let h=v;if(u+1<t.length){let g=t[u+1]>>>w;g<<=Math.max(0,e-I),h+=g}if(p>8&&u+2<t.length){const g=(u+3)*8-(n+e),f=t[u+2]>>>g;h+=f}return h}function a(t,n){for(let e=n.length-1;e>=0;e--)t.push(n[e]);return t}function s(t){const n=new Uint16Array(4093),e=new Uint8Array(4093);for(let c=0;c<=257;c++)n[c]=4096,e[c]=c;let l=258,u=U,B=0;function p(){l=258,u=U}function w(c){const y=i(c,B,u);return B+=u,y}function I(c,y){return e[l]=y,n[l]=c,l++,l-1}function v(c){const y=[];for(let O=c;O!==4096;O=n[O])y.push(e[O]);return y}const h=[];p();const g=new Uint8Array(t);let f=w(g),E;for(;f!==r;){if(f===C){for(p(),f=w(g);f===C;)f=w(g);if(f===r)break;if(f>C)throw new Error(`corrupted code at scanline ${f}`);{const c=v(f);a(h,c),E=f}}else if(f<l){const c=v(f);a(h,c),I(E,c[c.length-1]),E=f}else{const c=v(E);if(!c)throw new Error(`Bogus entry. Not in dictionary, ${E} / ${l}, position: ${B}`);a(h,c),h.push(c[c.length-1]),I(E,c[c.length-1]),E=f}l+1>=2**u&&(u===o?E=void 0:u++),f=w(g)}return new Uint8Array(h)}class d extends T.Z{decodeBlock(n){return s(n,!1).buffer}}}}]);
