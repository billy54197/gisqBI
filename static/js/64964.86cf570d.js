"use strict";(self.webpackChunkdatavisual=self.webpackChunkdatavisual||[]).push([[64964],{464964:function(k,n,l){l.r(n),l.d(n,{default:function(){return v}});var c=function(){var e=this,t=e._self._c;return t("el-collapse",[t("el-collapse-item",[t("template",{slot:"title"},[t("div",{staticClass:"my-title",staticStyle:{"font-size":"16px"}},[e._v("\u88C1\u526A\u914D\u7F6E")])]),t("vue-lazy-component",[t("el-form",[t("el-form-item",{staticStyle:{"padding-left":"10px"},attrs:{label:"\u6027\u80FD\u4F18\u5316"}},[t("el-switch",{attrs:{"active-color":"#13ce66","inactive-color":"#DCDFE6"},model:{value:e.currentWidget.config.stopMoveListener,callback:function(i){e.$set(e.currentWidget.config,"stopMoveListener",i)},expression:"currentWidget.config.stopMoveListener"}})],1),t("div",[t("el-form-item",{staticStyle:{"padding-left":"10px"},attrs:{label:"\u542F\u7528\u906E\u7F69"}},[t("el-switch",{attrs:{"active-color":"#13ce66","inactive-color":"#DCDFE6"},model:{value:e.currentWidget.config.isMask,callback:function(i){e.$set(e.currentWidget.config,"isMask",i)},expression:"currentWidget.config.isMask"}})],1),e.currentWidget.config.isMask?t("el-form-item",[t("el-collapse-item",[t("template",{slot:"title"},[t("div",{staticClass:"my-title",staticStyle:{"font-size":"14px"}},[e._v("\u906E\u7F69\u914D\u7F6E")])]),t("el-form",[t("el-form-item",{staticStyle:{"padding-left":"10px"},attrs:{label:"\u906E\u7F69\u7C7B\u578B"}},[t("el-select",{attrs:{size:"small"},on:{change:e.getConfigData},model:{value:e.currentWidget.config.maskType,callback:function(i){e.$set(e.currentWidget.config,"maskType",i)},expression:"currentWidget.config.maskType"}},[t("el-option",{attrs:{value:"fill",label:"\u586B\u5145"}}),t("el-option",{attrs:{value:"pruning",label:"\u62A0\u9664"}})],1)],1),t("el-form-item",{staticStyle:{"margin-left":"10px"},attrs:{label:"\u8FB9\u754C\u5BBD\u5EA6"}},[t("el-input-number",{attrs:{size:"small",step:.5,max:10,min:0},model:{value:e.currentWidget.config.maskConfig.strokeWidth,callback:function(i){e.$set(e.currentWidget.config.maskConfig,"strokeWidth",i)},expression:"currentWidget.config.maskConfig.strokeWidth"}})],1),t("el-form-item",{staticStyle:{"margin-left":"10px"},attrs:{label:"\u586B\u5145\u989C\u8272"}},[t("el-row",[t("el-col",{attrs:{span:12}},[t("el-input",{attrs:{placeholder:"\u9009\u62E9\u989C\u8272",size:"small"},model:{value:e.currentWidget.config.maskConfig.fillColor,callback:function(i){e.$set(e.currentWidget.config.maskConfig,"fillColor",i)},expression:"currentWidget.config.maskConfig.fillColor"}})],1),t("el-col",{attrs:{span:6}},[t("el-color-picker",{staticStyle:{"margin-left":"5px","margin-top":"5px"},attrs:{"show-alpha":"",predefine:e.$$global_editor.predefineColors},model:{value:e.currentWidget.config.maskConfig.fillColor,callback:function(i){e.$set(e.currentWidget.config.maskConfig,"fillColor",i)},expression:"currentWidget.config.maskConfig.fillColor"}})],1)],1)],1),t("el-form-item",{staticStyle:{"margin-left":"10px"},attrs:{label:"\u8FB9\u754C\u989C\u8272"}},[t("el-row",[t("el-col",{attrs:{span:12}},[t("el-input",{attrs:{placeholder:"\u9009\u62E9\u989C\u8272",size:"small"},model:{value:e.currentWidget.config.maskConfig.strokeColor,callback:function(i){e.$set(e.currentWidget.config.maskConfig,"strokeColor",i)},expression:"currentWidget.config.maskConfig.strokeColor"}})],1),t("el-col",{attrs:{span:6}},[t("el-color-picker",{staticStyle:{"margin-left":"5px","margin-top":"5px"},attrs:{"show-alpha":"",predefine:e.$$global_editor.predefineColors},model:{value:e.currentWidget.config.maskConfig.strokeColor,callback:function(i){e.$set(e.currentWidget.config.maskConfig,"strokeColor",i)},expression:"currentWidget.config.maskConfig.strokeColor"}})],1)],1)],1)],1)],2)],1):e._e(),t("el-form-item",{staticStyle:{"margin-left":"10px"},attrs:{label:"\u6570\u636E\u6765\u6E90"}},[t("el-radio-group",{on:{change:e.dataFromChange},model:{value:e.radio,callback:function(i){e.radio=i},expression:"radio"}},[t("el-radio",{attrs:{label:1}},[e._v("\u884C\u653F\u533A\u6570\u636E")]),t("el-radio",{attrs:{label:2}},[e._v("\u670D\u52A1\u6570\u636E")])],1)],1),t("div",{directives:[{name:"show",rawName:"v-show",value:e.showXZQ,expression:"showXZQ"}]},[t("el-form-item",{staticStyle:{"margin-left":"10px"},attrs:{label:"\u9009\u62E9\u884C\u653F\u533A"}},[t("el-select",{ref:"xzqSelect",staticStyle:{width:"195px"},attrs:{multiple:""},on:{"remove-tag":e.removeTag},model:{value:e.currentWidget.config.cutConfig.currentXZQMC,callback:function(i){e.$set(e.currentWidget.config.cutConfig,"currentXZQMC",i)},expression:"currentWidget.config.cutConfig.currentXZQMC"}},[t("el-option",{attrs:{id:"xzq-select-tree",value:e.currentWidget.config.cutConfig.currentXZQMC}},[t("el-tree",{ref:"curTree",attrs:{data:e.treeData,"default-expanded-keys":[33],"check-on-click-node":!0,"expand-on-click-node":!1,"node-key":"id","show-checkbox":!0,"check-strictly":!0,"default-checked-keys":e.defaulChecked},on:{check:e.handleNodeClickXzq},scopedSlots:e._u([{key:"default",fn:function({node:i,data:a}){return t("span",{staticClass:"custom-tree-node",style:e.setBackColor(i)},[t("span",[e._v(e._s(i.label))])])}}])})],1)],1)],1)],1),t("div",{directives:[{name:"show",rawName:"v-show",value:e.showServiceData,expression:"showServiceData"}]},[t("el-form-item",{staticStyle:{"margin-left":"10px"},attrs:{label:"\u670D\u52A1\u5730\u5740"}},[t("el-input",{model:{value:e.currentWidget.config.geoLayer.layer.url,callback:function(i){e.$set(e.currentWidget.config.geoLayer.layer,"url",i)},expression:"currentWidget.config.geoLayer.layer.url"}})],1),t("el-form-item",{staticStyle:{"margin-left":"10px",display:"flex"},attrs:{label:"\u53EF\u89C1\u56FE\u5C42"}},[t("el-input",{attrs:{size:"mini"},model:{value:e.currentWidget.config.geoLayer.layer.visibleLayers[0],callback:function(i){e.$set(e.currentWidget.config.geoLayer.layer.visibleLayers,0,i)},expression:"currentWidget.config.geoLayer.layer.visibleLayers[0]"}})],1),t("el-form-item",{staticStyle:{"margin-left":"10px"},attrs:{label:"\u670D\u52A1\u6765\u6E90"}},[t("el-select",{attrs:{size:"mini"},on:{change:e.getConfigData},model:{value:e.currentWidget.config.geoLayer.layer.serverOrigin,callback:function(i){e.$set(e.currentWidget.config.geoLayer.layer,"serverOrigin",i)},expression:"currentWidget.config.geoLayer.layer.serverOrigin"}},[t("el-option",{attrs:{value:"arcgis",label:"arcgis"}}),t("el-option",{attrs:{value:"geoserver",label:"geoserver"}})],1)],1),t("el-form-item",{staticStyle:{"margin-left":"10px"},attrs:{label:"\u670D\u52A1\u7C7B\u578B"}},[t("el-select",{attrs:{size:"mini"},on:{change:e.getConfigData},model:{value:e.currentWidget.config.geoLayer.layer.type,callback:function(i){e.$set(e.currentWidget.config.geoLayer.layer,"type",i)},expression:"currentWidget.config.geoLayer.layer.type"}},[t("el-option",{attrs:{value:"dynamic",label:"dynamic"}}),t("el-option",{attrs:{value:"geoserver-wfs",label:"wfs"}})],1)],1),t("el-form-item",{staticStyle:{"margin-left":"10px"},attrs:{label:"\u67E5\u8BE2\u6761\u4EF6"}},[t("el-input",{model:{value:e.currentWidget.config.geoLayer.whereInfo,callback:function(i){e.$set(e.currentWidget.config.geoLayer,"whereInfo",i)},expression:"currentWidget.config.geoLayer.whereInfo"}})],1)],1),t("div",[t("el-form-item",[t("el-collapse-item",[t("template",{slot:"title"},[t("div",{staticClass:"my-title"},[e._v("\u88C1\u526A\u56FE\u5C42\u5217\u8868")])]),t("div",{staticStyle:{"max-height":"200px","overflow-y":"auto","margin-left":"14px"}},e._l(e.layerArray,function(i,a){return t("div",{key:a},[t("el-checkbox",{on:{change:s=>{e.changeCut(s,i)}},model:{value:i.isCut,callback:function(s){e.$set(i,"isCut",s)},expression:"item.isCut"}},[e._v(e._s(i.label)+" ")])],1)}),0),t("div",{staticStyle:{width:"50px",float:"right",color:"#0d31d4",cursor:"pointer"},on:{click:function(i){return e.refreshList()}}},[e._v(" \u5237\u65B0 ")])],2)],1)],1)],1)],1)],1),t("div",{staticStyle:{position:"relative","text-align":"center","margin-top":"10px"}},[t("el-button",{attrs:{size:"mini",type:"primary"},on:{click:e.reloadCutting}},[e._v("\u786E\u5B9A")])],1)],2)],1)},g=[],o=l(927966),f=l(723400),u=l(608715),d=l(143156),h=l(149500),m={name:"GisCuttingStyle",mixins:[f.j,u.Z],props:["currentWidget"],data(){return{treeData:[],isIndeterminate:!1,checkAll:!1,defaulChecked:[],radio:1,xzqdm:"",layerArray:[],showXZQ:!0,showServiceData:!1,checked:!1,layerID:"",layerName:"",filterRadio:[{label:!0,text:"\u542F\u7528"},{label:!1,text:"\u5173\u95ED"}],speddRadio:[{label:!1,text:"\u542F\u7528"},{label:!0,text:"\u5173\u95ED"}],radios:[{label:!0,text:"\u884C\u653F\u533A"},{label:!1,text:"\u81EA\u5B9A\u4E49"}],maskType:[{label:"pruning",text:"\u62A0\u9664"},{label:"fill",text:"\u586B\u5145"}]}},mounted(){this.setTreeData(),this.setDefault(),o.Z.$on("refreshLayers",r=>{this.mapLayers=r.mapLayers,this.filterLayers=r.filterLayers,this.setIsIndeterminate()}),this.getCutLayers(),this.getConfigData()},methods:{setIsIndeterminate(){let r=this.currentWidget.config.loadedLayers.length,e=this.currentWidget.config.mapLayers;r>0&&r<e.length?(this.isIndeterminate=!0,this.checkAll=!1):r!=0&&r==e.length&&(this.checkAll=!0)},getCutLayers(){this.layerArray=[];for(let r in this.getWidgets)(this.getWidgets[r].typeName==="gis-map"||this.getWidgets[r].typeName==="gis-toc")&&this.getWidgets[r].mapLayer.toc.forEach(t=>{let i={};t.url&&(i.isCut=this.currentWidget.config.targetLayers.includes(t.id)||!1,i.label=t.label,i.id=t.id,this.layerArray.push(i))})},changeCut(r,e){if(r)this.currentWidget.config.targetLayers.push(e.id);else{let t=this.currentWidget.config.targetLayers.indexOf(e.id);t>-1&&this.currentWidget.config.targetLayers.splice(t,1)}h.log(this.currentWidget.config.targetLayers)},dataFromChange(r){if(r===1){this.showXZQ=!0,this.currentWidget.config.cutConfig.isXZQ=!0,this.showServiceData=!1;let e=this.currentWidget.config.cutConfig.currentXZQ.map(t=>t.id);this._getGeoJson(e)}else this.showXZQ=!1,this.currentWidget.config.cutConfig.isXZQ=!1,this.showServiceData=!0,this.currentWidget.config.geoJson=void 0},setDefault(){let r=this.currentWidget.config.cutConfig.currentXZQ,e=this.currentWidget.config.cutConfig.isXZQ;this.radio=e?1:2,this.showXZQ=e,this.showServiceData=!e,r.forEach(t=>{let i=Number(t.id);this.defaulChecked.push(i)})},setTreeData(){let e=this.$$region_data.citiesTree[0].children;for(let t=0;t<e.length-1;t++){let i=e[t];if(i.id===33||i.id==="33"){this.treeData.push(i);break}}},onLayerChange(r){this.currentWidget.config.layer=r,this.currentWidget.config.treeLayer=this.$refs.dataTree.list.layer},handleNodeClickXzq(r,e){let t=[];this.currentWidget.config.cutConfig.currentXZQ=e.checkedNodes,this.currentWidget.config.cutConfig.currentXZQMC=[],e.checkedNodes.forEach(i=>{t.push(i.id),this.currentWidget.config.cutConfig.currentXZQMC.push(i.label)}),t.length>0?this._getGeoJson(t):this.currentWidget.config.geoJson=[]},_getGeoJson(r){d.h.getListByWhereClause({xzqCode:r}).then(e=>{e.status===200&&e.data&&e.data.length>0&&(this.currentWidget.config.geoJson=e.data)})},removeTag(r){let e=this.currentWidget.config.cutConfig.currentXZQ;for(let t=0;t<e.length;t++)if(e[t].label===r){this.currentWidget.config.cutConfig.currentXZQ.splice(t,1);break}},reloadCutting(){this.getConfigData()},refreshList(){o.Z.$emit("refreshCutingList"),this.getCutLayers()},setBackColor(r){let e="color:#000";return this.getChildChecked(r)&&(e="color:blue"),e},getChildChecked(r){if(r&&r.checked)return!0;if(r){let e=r.childNodes;if(e&&e.length>0){let t=!1;if(e.forEach(i=>{this.getChildChecked(i)&&(t=!0)}),t)return!0}else return!1}else return!1},handleCheckAllChange(r){let e=[];r&&this.mapLayers.forEach(t=>{e.push(t.id)}),this.currentWidget.config.loadedLayers=e,this.isIndeterminate=!1},handleCheckedLayerChange(r){let e=r.length;this.checkAll=e===this.mapLayers.length,this.isIndeterminate=e>0&&e<this.mapLayers.length}}},p=m,y=l(768141),C=(0,y.Z)(p,c,g,!1,null,"11fcd1ee",null),v=C.exports}}]);
